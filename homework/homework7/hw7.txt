Задание

• Установить в виртуальную машину или VDS Docker, настроить набор контейнеров через docker compose по инструкции.
Часть с настройкой certbot и HTTPS опустить, если у вас нет настоящего домена и белого IP.
mkdir wordpress && cd wordpress
mkdir nginx-conf
nano nginx-conf/nginx.conf

Запись в файл nginx.conf:
server {
        listen 80;
        listen [::]:80;

        server_name example.com www.example.com;

        index index.php index.html index.htm;

        root /var/www/html;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }

        location / {
                try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass wordpress:9000;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        location ~ /\.ht {
                deny all;
        }

        location = /favicon.ico {
                log_not_found off; access_log off;
        }
        location = /robots.txt {
                log_not_found off; access_log off; allow all;
        }
        location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
                expires max;
                log_not_found off;
        }
}

sudo nano .env
Запись в файл .env:
MYSQL_ROOT_PASSWORD=dedis
MYSQL_USER=dedis
MYSQL_PASSWORD=dedis

sudo nano .dockerignore
Запись в файл .dockerignore:
.env
docker-compose.yml
.dockerignore

sudo nano docker-compose.yml
Запись в файл nano docker-compose.yml:
version: '3'

services:
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes:
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network

  wordpress:
    depends_on:
      - db
    image: wordpress:5.1.1-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      - app-network

volumes:
  wordpress:
  dbdata:

networks:
  app-network:
    driver: bridge

Запуск docker-compose
sudo docker-compose up -d

Отключение docker-compose
sudo docker-compose down



• Запустить два контейнера, связанные одной сетью (используя документацию).
Первый контейнер БД (например, образ mariadb:10.8), второй контейнер — phpmyadmin.
Получить доступ к БД в первом контейнере через второй контейнер (веб-интерфейс phpmyadmin).

Создание сети для контейнеров
sudo docker network create mynetwork

Запуск mariadb 10.8 с сетью mynetwrok
sudo docker run -it -d --network mynetwork --name mydb -e MYSQL_ROOT_PASSWORD=dedis mariadb:10.8

Запуск phpmyadmin с сетью mynetwork и c пробросом портов 8080:80
sudo docker run -it -d --network mynetwork -p 8080:80 --name phpmyadmin -e PMA_HOST=mydb phpmyadmin

Проверка работают ли контейнеры
sudo docker ps

Вход в контейнер с базой данных
sudo docker exec -it mydb bash

Вход СУБД mariadb
mysql -u root -p

Создаем базу данных и таблицу в ней, чтобы увидеть их в phpmyadmin
DROP DATABASE IF EXISTS hw7;
CREATE DATABASE db_name hw7;
CREATE TABLE hw_table (hw_id INT NOT NULL AUTO_INCREMENT,
    hw_name VARCHAR(25),
    PRIMARY KEY(hw_id));

В браузере вводим localhost:8080
Логин root
Пароль тот который задали при запуске контейнера mariadb